{"version":3,"sources":["App.js","componentes/InputCustomizado.js","componentes/TratadorErros.js","Autor.js","Home.js","Livro.js","serviceWorker.js","index.js"],"names":["App","id","href","className","to","this","props","children","React","Component","InputCustomizado","state","msgErro","htmlFor","label","PubSub","subscribe","topico","erro","field","name","setState","defaultMessage","TratadorErros","objetoErros","i","errors","length","publish","AutorBox","lista","$","ajax","url","dataType","success","resposta","novaLista","bind","FormularioAutor","nome","email","senha","event","preventDefault","contentType","type","data","JSON","stringify","error","status","publicaErro","responseJSON","beforeSend","nomeInput","evento","campoAlterado","target","value","onSubmit","enviaForm","method","onChange","salvaAlteracao","TabelaAutores","map","autor","key","Home","LivroBox","autores","FormularioLivro","titulo","preco","autorID","submitLivro","placeholder","setTitulo","setPreco","setAutorID","TabelaLivros","livros","livro","Boolean","window","location","hostname","match","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22885514.chunk.js","sourcesContent":["import React from 'react';\nimport './css/pure-min.css';\nimport './css/side-menu.css';\nimport {Link} from 'react-router-dom';\n\n\nclass App extends React.Component{\n\n  render(){\n      return(\n    <div id=\"layout\">\n    \n    <a href=\"#menu\" id=\"menuLink\" className=\"menu-link\">\n        \n        <span></span>\n    </a>\n\n    <div id=\"menu\">\n        <div className=\"pure-menu\">\n            <a className=\"pure-menu-heading\" href=\"#\">Livraria</a>\n\n            <ul className=\"pure-menu-list\">\n                <li className=\"pure-menu-item\"><Link to=\"/\" className=\"pure-menu-link\">Home</Link></li>\n                <li className=\"pure-menu-item\"><Link to=\"/autor\" className=\"pure-menu-link\">Autor</Link></li>\n                <li className=\"pure-menu-item\"><Link to=\"/livro\" className=\"pure-menu-link\">Livros</Link></li>\n            </ul>\n        </div>\n    </div>\n\n    <div id=\"main\">\n           {this.props.children}>\n    </div>         \n</div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\r\nimport PubSub from 'pubsub-js';\r\n\r\n\r\nexport default class InputCustomizado extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {msgErro:\"\"};\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"pure-control-group\">\r\n                <label htmlFor={this.props.id}>{this.props.label}</label> \r\n                <input {...this.props} />                  \r\n                <span className=\"error\">{this.state.msgErro}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        PubSub.subscribe(\"erro-validacao\", (topico,erro) => {\r\n            if(erro.field === this.props.name){\r\n              this.setState({msgErro:erro.defaultMessage});\r\n            }\r\n        }\r\n        )\r\n\r\n        PubSub.subscribe(\"limpa\", (topico) => {\r\n              this.setState({msgErro:\"\"});\r\n            }\r\n        )\r\n    }\r\n}","import PubSub from 'pubsub-js';\r\n\r\nexport default class TratadorErros {\r\n\r\n    publicaErro(objetoErros){\r\n        for(let i = 0;i < objetoErros.errors.length;i++){\r\n            let erro = objetoErros.errors[i];\r\n            PubSub.publish(\"erro-validacao\", erro);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport $ from 'jquery';\r\nimport InputCustomizado from './componentes/InputCustomizado.js';\r\nimport PubSub from 'pubsub-js';\r\nimport TratadorErros from './componentes/TratadorErros.js';\r\n\r\nexport default class AutorBox extends React.Component {\r\n\r\n    constructor (){\r\n        super();\r\n        this.state = {lista :[]}\r\n      }\r\n    componentDidMount(){\r\n    $.ajax({\r\n        url:\"https://jsonstorage.net/api/items/1895ad31-be47-427e-af0d-17ed2a8ddf9c\",\r\n        dataType: 'json',\r\n        success: (resposta) => {\r\n        this.setState({lista:resposta})\r\n        }\r\n    });\r\n    PubSub.subscribe(\"atualiza-lista-autores\", function(topico, novaLista){\r\n        this.setState({lista:novaLista})\r\n    }.bind(this))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n            <div className=\"header\">\r\n              <h1>Cadastro de autores</h1>\r\n            </div>\r\n            <div className=\"content\" id=\"content\">\r\n              <FormularioAutor />\r\n              <TabelaAutores lista={this.state.lista} />\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass FormularioAutor extends React.Component {\r\n\r\n    constructor (){\r\n        super();\r\n        this.state = {nome:\"\", email:\"\", senha:\"\"}\r\n      }\r\n\r\n    \r\n    enviaForm(event){\r\n        event.preventDefault();\r\n        \r\n        $.ajax({\r\n        url: \"https://jsonstorage.net/api/items/1895ad31-be47-427e-af0d-17ed2a8ddf9c\",\r\n        contentType: 'application/json',\r\n        dataType: 'json',\r\n        type: 'post',\r\n        data:JSON.stringify({nome:this.state.nome,email:this.state.email,senha:this.state.senha}),\r\n        success:(novaLista) => {\r\n            PubSub.publish(\"atualiza-lista-autores\", novaLista);\r\n            this.setState({nome:\"\", email:\"\", senha:\"\"});\r\n        },\r\n        error: function(resposta){\r\n            if(resposta.status === 400){\r\n                new TratadorErros().publicaErro(resposta.responseJSON);\r\n            }\r\n            \r\n        },\r\n        beforeSend: () => {\r\n            PubSub.publish(\"limpa\",{});\r\n        }\r\n        })\r\n        \r\n    }\r\n\r\n    salvaAlteracao(nomeInput, evento){\r\n      let campoAlterado = {};\r\n      campoAlterado[nomeInput] = evento.target.value;\r\n      this.setState(campoAlterado);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"pure-form pure-form-aligned\">\r\n            <form className=\"pure-form pure-form-aligned\" onSubmit={this.enviaForm.bind(this)} method=\"post\">\r\n              <InputCustomizado id=\"nome\" type=\"text\" name=\"nome\" value={this.state.nome} onChange={this.salvaAlteracao.bind(this, \"nome\")} label=\"Nome\"/>                                              \r\n              <InputCustomizado id=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.salvaAlteracao.bind(this, \"email\")} label=\"Email\"/>                                              \r\n              <InputCustomizado id=\"senha\" type=\"password\" name=\"senha\" value={this.state.senha} onChange={this.salvaAlteracao.bind(this, \"senha\")} label=\"Senha\"/>\r\n              <div className=\"pure-control-group\">                                  \r\n                <label></label> \r\n                <button type=\"submit\" className=\"pure-button pure-button-primary\">Gravar</button>                                    \r\n              </div>\r\n            </form>             \r\n\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class TabelaAutores extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>            \r\n            <table className=\"pure-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Nome</th>\r\n                  <th>email</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                  {\r\n                    this.props.lista.map(autor => {\r\n                      return (\r\n                        <tr key={autor.id}>\r\n                          <td>{autor.nome}</td>\r\n                          <td>{autor.email}</td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  }\r\n              </tbody>\r\n            </table> \r\n          </div>        \r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Home extends React.Component {\r\n    render(){\r\n        return (\r\n          <div>        \r\n              <div className=\"header\">\r\n                <h1>Bem vindo ao sistema</h1>\r\n              </div>\r\n              <div className=\"content\" id=\"content\">                              \r\n              </div>\r\n          </div>\r\n\r\n        );        \r\n    }\r\n}","import React from 'react';\r\nimport $ from 'jquery';\r\nimport InputCustomizado from './componentes/InputCustomizado.js';\r\nimport PubSub from 'pubsub-js';\r\nimport TratadorErros from './componentes/TratadorErros.js';\r\n\r\nexport default class LivroBox extends React.Component {\r\n\r\n    constructor (){\r\n        super();\r\n        this.state = {lista :[], autores:[]}\r\n      }\r\n    componentDidMount(){\r\n    $.ajax({\r\n        url:\"https://jsonstorage.net/api/items/ed903eb2-f745-41e2-9c64-e80d06438b51\",\r\n        dataType: 'json',\r\n        success: (resposta) => {\r\n        this.setState({lista:resposta})\r\n        }\r\n    });\r\n\r\n    $.ajax({\r\n        url: \"https://jsonstorage.net/api/items/1895ad31-be47-427e-af0d-17ed2a8ddf9c\",\r\n        dataType: 'json',\r\n        success:(data) => {\r\n          this.setState({autores: data});\r\n        }\r\n      });\r\n\r\n    PubSub.subscribe(\"atualiza-lista-livros\", function(topico, novaLista){\r\n        this.setState({lista:novaLista})\r\n    }.bind(this))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n            <div className=\"header\">\r\n              <h1>Cadastro de Livros</h1>\r\n            </div>\r\n            <div className=\"content\" id=\"content\">\r\n              <FormularioLivro autores={this.state.autores}/>\r\n              <TabelaLivros lista={this.state.lista} />\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass FormularioLivro extends React.Component {\r\n\r\n    constructor (){\r\n        super();\r\n        this.state = {titulo:\"\", preco:\"\", autorID:\"\"}\r\n      }\r\n\r\n    \r\n    submitLivro(event){\r\n        event.preventDefault();\r\n        \r\n        $.ajax({\r\n        url: \"https://jsonstorage.net/api/items/ed903eb2-f745-41e2-9c64-e80d06438b51\",\r\n        contentType: 'application/json',\r\n        dataType: 'json',\r\n        type: 'post',\r\n        data:JSON.stringify({titulo:this.state.titulo,preco:this.state.preco,autorID:this.state.autorID}),\r\n        success:(novaLista) => {\r\n            PubSub.publish(\"atualiza-lista-livros\", novaLista);\r\n            this.setState({titulo:\"\", preco:\"\", autorID:\"\"});\r\n        },\r\n        error: function(resposta){\r\n            if(resposta.status === 400){\r\n                new TratadorErros().publicaErro(resposta.responseJSON);\r\n            }\r\n            \r\n        },\r\n        beforeSend: () => {\r\n            PubSub.publish(\"limpa\",{});\r\n        }\r\n        })\r\n        \r\n    }\r\n\r\n    setTitulo(event){\r\n        this.setState({titulo:event.target.value});\r\n      }\r\n    \r\n      setPreco(event){\r\n        this.setState({preco:event.target.value});\r\n      }\r\n    \r\n      setAutorID(event){\r\n        this.setState({autorID:event.target.value});\r\n      }\r\n\r\n      render() {\r\n        var autores = this.props.autores.map((autor) => {\r\n          return <option key={autor.id} value={autor.id}>{autor.nome}</option>;\r\n        });\r\n        return (\r\n          <div className=\"autorForm\">\r\n            <form className=\"pure-form pure-form-aligned\" onSubmit={this.submitLivro.bind(this)} method=\"post\">\r\n              <InputCustomizado id=\"titulo\" name=\"titulo\" label=\"Titulo: \" type=\"text\" value={this.state.titulo} placeholder=\"Titulo do livro\" onChange={this.setTitulo.bind(this)} />\r\n              <InputCustomizado id=\"preco\" name=\"text\" label=\"Preco: \" type=\"decimal\" value={this.state.preco} placeholder=\"Preço do livro\" onChange={this.setPreco.bind(this)} />\r\n              <div className=\"pure-controls\">\r\n                <label htmlFor=\"autorID\">Autor</label>\r\n                <select value={this.state.autorID} name=\"autorId\" onChange={this.setAutorID.bind(this)}>\r\n                  <option value=\"\">Selecione</option>\r\n                  {autores}\r\n                </select>\r\n              </div>\r\n              <div className=\"pure-control-group\">                                  \r\n                <label></label> \r\n                <button type=\"submit\" className=\"pure-button pure-button-primary\">Gravar</button>                                    \r\n              </div>          \r\n            </form>             \r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport class TabelaLivros extends React.Component {\r\n\r\n    render(){\r\n            var livros = this.props.lista.map((livro) => {\r\n                return(\r\n                    <tr key={livro.titulo}>\r\n                      <td>{livro.titulo}</td>\r\n                      <td>{livro.autor.nome}</td>\r\n                      <td>{livro.preco}</td>\r\n                    </tr>\r\n                  );\r\n                });\r\n\r\n        return(\r\n            <div>            \r\n            <table className=\"pure-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Titulo</th>\r\n                  <th>Autor</th>\r\n                  <th>Preço</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                  {livros}\r\n              </tbody>\r\n            </table> \r\n          </div>        \r\n        )\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport AutorBox from './Autor';\nimport Home from './Home';\nimport LivroBox from './Livro';\nimport {BrowserRouter as Router, Route,Switch} from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <Router>\n        <App>\n                <Switch>            \n                    <Route exact path=\"/\" component={Home}/>\n                    <Route path=\"/autor\" component={AutorBox}/>\n                    <Route path=\"/livro\" component={LivroBox}/>                \n                </Switch>            \n        </App>\n    </Router>\n\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}